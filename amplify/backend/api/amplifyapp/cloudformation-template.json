{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {},
    "Parameters": {
        "AppSyncApiName": {
            "Type": "String",
            "Description": "The name of the AppSync API",
            "Default": "AppSyncSimpleTransform"
        },
        "DynamoDBModelTableReadIOPS": {
            "Type": "Number",
            "Description": "The number of read IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBModelTableWriteIOPS": {
            "Type": "Number",
            "Description": "The number of write IOPS the table should support.",
            "Default": 5
        },
        "schemaGraphql": {
            "Type": "String",
            "Description": "The S3 location for the Schema: schema.graphql"
        },
        "QueryGetBlogRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getBlog.request"
        },
        "QueryGetBlogResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getBlog.response"
        },
        "QueryListBlogsRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listBlogs.request"
        },
        "QueryListBlogsResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listBlogs.response"
        },
        "MutationCreateBlogRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createBlog.request"
        },
        "MutationCreateBlogResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createBlog.response"
        },
        "MutationUpdateBlogRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateBlog.request"
        },
        "MutationUpdateBlogResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateBlog.response"
        },
        "MutationDeleteBlogRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteBlog.request"
        },
        "MutationDeleteBlogResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteBlog.response"
        },
        "QueryGetPostRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getPost.request"
        },
        "QueryGetPostResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getPost.response"
        },
        "QueryListPostsRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listPosts.request"
        },
        "QueryListPostsResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listPosts.response"
        },
        "MutationCreatePostRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createPost.request"
        },
        "MutationCreatePostResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createPost.response"
        },
        "MutationUpdatePostRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updatePost.request"
        },
        "MutationUpdatePostResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updatePost.response"
        },
        "MutationDeletePostRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deletePost.request"
        },
        "MutationDeletePostResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deletePost.response"
        },
        "QueryGetCommentRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getComment.request"
        },
        "QueryGetCommentResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getComment.response"
        },
        "QueryListCommentsRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listComments.request"
        },
        "QueryListCommentsResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listComments.response"
        },
        "MutationCreateCommentRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createComment.request"
        },
        "MutationCreateCommentResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createComment.response"
        },
        "MutationUpdateCommentRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateComment.request"
        },
        "MutationUpdateCommentResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateComment.response"
        },
        "MutationDeleteCommentRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteComment.request"
        },
        "MutationDeleteCommentResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteComment.response"
        },
        "BlogPostsRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Blog.posts.request"
        },
        "BlogPostsResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Blog.posts.response"
        },
        "PostBlogRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Post.blog.request"
        },
        "PostBlogResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Post.blog.response"
        },
        "PostCommentsRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Post.comments.request"
        },
        "PostCommentsResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Post.comments.response"
        },
        "CommentPostRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Comment.post.request"
        },
        "CommentPostResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Comment.post.response"
        }
    },
    "Resources": {
        "GraphQLSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DefinitionS3Location": {
                    "Ref": "schemaGraphql"
                }
            }
        },
        "GraphQLAPI": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
                "Name": {
                    "Ref": "AppSyncApiName"
                },
                "AuthenticationType": "API_KEY"
            }
        },
        "GraphQLAPIKey": {
            "Type": "AWS::AppSync::ApiKey",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                }
            }
        },
        "BlogTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Blog",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "BlogIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "BlogTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "BlogTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "BlogTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "BlogDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "BlogTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "BlogIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "BlogTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "BlogTable"
                    }
                }
            }
        },
        "GetBlogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getBlog",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetBlogRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetBlogResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListBlogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listBlogs",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListBlogsRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListBlogsResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreateBlogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createBlog",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreateBlogRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreateBlogResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdateBlogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateBlog",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdateBlogRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdateBlogResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeleteBlogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteBlog",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeleteBlogRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeleteBlogResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "PostTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Post",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "postBlogId",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                },
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "gsi-BlogPosts",
                        "KeySchema": [
                            {
                                "AttributeName": "postBlogId",
                                "KeyType": "HASH"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                            "ReadCapacityUnits": {
                                "Ref": "DynamoDBModelTableReadIOPS"
                            },
                            "WriteCapacityUnits": {
                                "Ref": "DynamoDBModelTableWriteIOPS"
                            }
                        }
                    }
                ]
            }
        },
        "PostIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "PostTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "PostTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "PostTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "PostDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "PostTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "PostIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "PostTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "PostTable"
                    }
                }
            }
        },
        "GetPostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getPost",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetPostRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetPostResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListPostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listPosts",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListPostsRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListPostsResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreatePostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createPost",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreatePostRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreatePostResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdatePostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updatePost",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdatePostRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdatePostResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeletePostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deletePost",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeletePostRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeletePostResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CommentTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Comment",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "commentPostId",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                },
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "gsi-PostComments",
                        "KeySchema": [
                            {
                                "AttributeName": "commentPostId",
                                "KeyType": "HASH"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                            "ReadCapacityUnits": {
                                "Ref": "DynamoDBModelTableReadIOPS"
                            },
                            "WriteCapacityUnits": {
                                "Ref": "DynamoDBModelTableWriteIOPS"
                            }
                        }
                    }
                ]
            }
        },
        "CommentIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "CommentTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "CommentTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "CommentTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CommentDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "CommentTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CommentIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "CommentTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "CommentTable"
                    }
                }
            }
        },
        "GetCommentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getComment",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetCommentRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetCommentResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListCommentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listComments",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListCommentsRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListCommentsResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreateCommentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createComment",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreateCommentRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreateCommentResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdateCommentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateComment",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdateCommentRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdateCommentResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeleteCommentResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteComment",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeleteCommentRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeleteCommentResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "BlogpostsResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "posts",
                "TypeName": "Blog",
                "RequestMappingTemplateS3Location": {
                    "Ref": "BlogPostsRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "BlogPostsResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "PostblogResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "BlogDataSource",
                        "Name"
                    ]
                },
                "FieldName": "blog",
                "TypeName": "Post",
                "RequestMappingTemplateS3Location": {
                    "Ref": "PostBlogRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "PostBlogResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "PostcommentsResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "CommentDataSource",
                        "Name"
                    ]
                },
                "FieldName": "comments",
                "TypeName": "Post",
                "RequestMappingTemplateS3Location": {
                    "Ref": "PostCommentsRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "PostCommentsResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CommentpostResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PostDataSource",
                        "Name"
                    ]
                },
                "FieldName": "post",
                "TypeName": "Comment",
                "RequestMappingTemplateS3Location": {
                    "Ref": "CommentPostRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "CommentPostResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        }
    },
    "Outputs": {
        "GraphQLAPIIdOutput": {
            "Description": "Your GraphQL API ID.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPI",
                    "ApiId"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiId"
                        ]
                    ]
                }
            }
        },
        "GraphQLAPIEndpointOutput": {
            "Description": "Your GraphQL API endpoint.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPI",
                    "GraphQLUrl"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiEndpoint"
                        ]
                    ]
                }
            }
        },
        "GraphQLAPIKeyOutput": {
            "Description": "Your GraphQL API key. Provide via 'x-api-key' header.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPIKey",
                    "ApiKey"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiKey"
                        ]
                    ]
                }
            }
        }
    }
}